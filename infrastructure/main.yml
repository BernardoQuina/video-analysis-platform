AWSTemplateFormatVersion: '2010-09-09'
Description: 'Parent stack for VPC, API Cluster with Auto Scaling EC2 Instances and ALB'

Parameters:
  AccountId:
    Type: String
    Description: AWS account ID (needed for lambda permission)

  # Stacks S3
  StackTemplatesS3BucketName:
    Type: String
    Description: Name of the S3 bucket containing nested stack templates (needs to be pre-created)

  # Key pair for ec2 instances
  EC2KeyPairName:
    Type: String
    Description: EC2 key pair name for the instances

  # Cognito (Google sign-in) Parameters
  FrontendDomainName:
    Type: String
    Description: Domain Name for frontend site (CloudFront)
  GoogleClientId:
    Type: String
    Description: Google OAuth 2.0 Client ID
  GoogleClientSecret:
    Type: String
    Description: Google OAuth 2.0 Client Secret
    NoEcho: true
  AppDomainPrefix:
    Type: String
    Description: Prefix for the Cognito domain

  # Lambda Parameters
  LambdasCodeS3BucketName:
    Type: String
    Description: Name of the pre created bucket that stores lambda code zip files (needs to be pre-created)
  EnvironmentName:
    Type: String
    Default: production
    Description: Name of the the environment of the lambdas (e.g. development, production)

  # Video storage S3
  VideoStorageS3BucketName:
    Type: String
    Description: Name of the S3 bucket that will store uploaded videos (needs to be pre-created)

  # API parameters
  APIECSAMI:
    Type: AWS::SSM::Parameter::Value<AWS::EC2::Image::Id>
    Default: /aws/service/ecs/optimized-ami/amazon-linux-2/recommended/image_id
    Description: The AMI ID used for the API cluster, leave it as the default value to get the latest AMI
  APIInstanceType:
    Type: String
    Default: t2.micro
    Description: EC2 instance type for the API cluster
  APIDesiredCapacity:
    Type: Number
    Default: 1
    Description: Desired number of EC2 instances in the API Auto Scaling Group
  APIMinSize:
    Type: Number
    Default: 1
    Description: Minimum number of EC2 instances in the API Auto Scaling Group
  APIMaxSize:
    Type: Number
    Default: 2
    Description: Maximum number of EC2 instances in the API Auto Scaling Group
  APIECRRepositoryName:
    Type: String
    Description: Name of the ECR API repository
  APIImageTag:
    Type: String
    Default: latest
    Description: Tag of the API Docker image to deploy

  # Analysis Model parameters
  AnalysisModelECSAMI:
    Type: String # If using default change to: AWS::SSM::Parameter::Value<AWS::EC2::Image::Id>
    Default: /aws/service/ecs/optimized-ami/amazon-linux-2/gpu/recommended/image_id
    Description: The AMI ID used for the Analysis Model cluster, leave it as the default value to get the latest AMI
  AnalysisModelInstanceType:
    Type: String
    Default: g4dn.xlarge
    Description: EC2 instance type for the Analysis Model cluster. GPU-enabled instance required
  AnalysisModelMinSize:
    Type: Number
    Default: 0
    Description: Minimum number of EC2 instances in the Analysis Model Auto Scaling Group
  AnalysisModelMaxSize:
    Type: Number
    Default: 1
    Description: Maximum number of EC2 instances in the Analysis Model Auto Scaling Group
  AnalysisModelDesiredCapacity:
    Type: Number
    Default: 0
    Description: Desired number of EC2 instances in the Analysis Model Auto Scaling Group
  AnalysisModelTargetBacklogPerTask:
    Type: Number
    Default: 180
    Description: This is the ideal number of messages in backlog to be processed per task and it should be calculated by dividing the acceptable latency for a job completion by the average processing time of that job. For example if it is acceptable to wait 900 seconds for a job completion and it usually takes 5 seconds to complete the job than the target backlog per task = 900 / 5 = 180. This means that if we have 180 messages we want 1 task running, 360 messages we want 2 tasks running and so on. The lower the acceptable latency the fewer messages will be needed to trigger a scale out event and vice versa.
  AnalysisModelECRRepositoryName:
    Type: String
    Description: Name of the analysis model ECR repository
  AnalysisModelImageTag:
    Type: String
    Default: latest
    Description: Tag of the analysis model Docker image to deploy

  # ALB parameters
  APIDomainName:
    Type: String
    Description: Domain name for the API ALB
  HostedZoneId:
    Type: String
    Description: The ID of the hosted zone in Route 53

Resources:
  # Cognito User Pool Stack
  CognitoUserPool:
    Type: AWS::CloudFormation::Stack
    DeletionPolicy: Delete
    UpdateReplacePolicy: Delete
    Properties:
      TemplateURL: !Sub https://${StackTemplatesS3BucketName}.s3.amazonaws.com/main/cognito-user-pool.yml
      Parameters:
        FrontendDomainName: !Ref FrontendDomainName
        GoogleClientId: !Ref GoogleClientId
        GoogleClientSecret: !Ref GoogleClientSecret
        AppDomainPrefix: !Ref AppDomainPrefix
        StackName: !Ref AWS::StackName


  # Custom Analysis SQS Queue Stack
  CustomAnalysisSQSQueue:
    Type: AWS::CloudFormation::Stack
    DeletionPolicy: Delete
    UpdateReplacePolicy: Delete
    Properties:
      TemplateURL: !Sub https://${StackTemplatesS3BucketName}.s3.amazonaws.com/main/custom-analysis-sqs-queue.yml
      Parameters:
        StackName: !Ref AWS::StackName

  # Transcribe Lambda Stack (triggered by S3 video upload)
  TranscribeLambda:
    Type: AWS::CloudFormation::Stack
    DeletionPolicy: Delete
    UpdateReplacePolicy: Delete
    Properties:
      TemplateURL: !Sub https://${StackTemplatesS3BucketName}.s3.amazonaws.com/transcribe-lambda/transcribe-lambda.yml
      Parameters:
        LambdasCodeS3BucketName: !Ref LambdasCodeS3BucketName
        EnvironmentName: !Ref EnvironmentName
        StackName: !Ref AWS::StackName

  # Rekognition Lambda Stack (triggered by S3 video upload)
  RekognitionLambda:
    Type: AWS::CloudFormation::Stack
    DeletionPolicy: Delete
    UpdateReplacePolicy: Delete
    Properties:
      TemplateURL: !Sub https://${StackTemplatesS3BucketName}.s3.amazonaws.com/rekognition-lambda/rekognition-lambda.yml
      Parameters:
        LambdasCodeS3BucketName: !Ref LambdasCodeS3BucketName
        EnvironmentName: !Ref EnvironmentName
        StackName: !Ref AWS::StackName

  # Video Storage S3 Bucket Stack
  VideoStorageS3BucketStack:
    Type: AWS::CloudFormation::Stack
    DeletionPolicy: Delete
    UpdateReplacePolicy: Delete
    Properties:
      TemplateURL: !Sub https://${StackTemplatesS3BucketName}.s3.amazonaws.com/main/video-storage-s3-bucket.yml
      Parameters:
        AccountId: !Ref AccountId
        VideoStorageS3BucketName: !Ref VideoStorageS3BucketName
        TranscribeLambdaArn: !GetAtt TranscribeLambda.Outputs.TranscribeLambdaArn
        RekognitionLambdaArn: !GetAtt RekognitionLambda.Outputs.RekognitionLambdaArn
        StackName: !Ref AWS::StackName

  # VPC Stack
  VPCStack:
    Type: AWS::CloudFormation::Stack
    DeletionPolicy: Delete
    UpdateReplacePolicy: Delete
    Properties:
      TemplateURL: !Sub https://${StackTemplatesS3BucketName}.s3.amazonaws.com/main/vpc.yml
      Parameters:
        StackName: !Ref AWS::StackName

  # ALB Stack
  ALBStack:
    Type: AWS::CloudFormation::Stack
    DeletionPolicy: Delete
    UpdateReplacePolicy: Delete
    Properties:
      TemplateURL: !Sub https://${StackTemplatesS3BucketName}.s3.amazonaws.com/main/alb.yml
      Parameters:
        VPCId: !GetAtt VPCStack.Outputs.VPC
        PublicSubnet1: !GetAtt VPCStack.Outputs.PublicSubnet1
        PublicSubnet2: !GetAtt VPCStack.Outputs.PublicSubnet2
        APIDomainName: !Ref APIDomainName
        HostedZoneId: !Ref HostedZoneId
        StackName: !Ref AWS::StackName

  # API Cluster (and service) Stack
  APIClusterStack:
    Type: AWS::CloudFormation::Stack
    DeletionPolicy: Delete
    UpdateReplacePolicy: Delete
    Properties:
      TemplateURL: !Sub https://${StackTemplatesS3BucketName}.s3.amazonaws.com/api/api-cluster.yml
      Parameters:
        VPCId: !GetAtt VPCStack.Outputs.VPC
        PublicSubnet3: !GetAtt VPCStack.Outputs.PublicSubnet3
        PublicSubnet4: !GetAtt VPCStack.Outputs.PublicSubnet4
        ECSAMI: !Ref APIECSAMI
        InstanceType: !Ref APIInstanceType
        EC2KeyPairName: !Ref EC2KeyPairName
        MinSize: !Ref APIMinSize
        MaxSize: !Ref APIMaxSize
        DesiredCapacity: !Ref APIDesiredCapacity
        ECRRepositoryName: !Ref APIECRRepositoryName
        ImageTag: !Ref APIImageTag
        ALBTargetGroupArn: !GetAtt ALBStack.Outputs.ALBTargetGroupArn
        ALBSecurityGroupId: !GetAtt ALBStack.Outputs.ALBSecurityGroupId
        StackName: !Ref AWS::StackName

  # Analysis model (and service) Stack
  AnalysisModelClusterStack:
    Type: AWS::CloudFormation::Stack
    DeletionPolicy: Delete
    UpdateReplacePolicy: Delete
    Properties:
      TemplateURL: !Sub https://${StackTemplatesS3BucketName}.s3.amazonaws.com/analysis-model/analysis-model-cluster.yml
      Parameters:
        VPCId: !GetAtt VPCStack.Outputs.VPC
        PublicSubnet5: !GetAtt VPCStack.Outputs.PublicSubnet5
        PublicSubnet6: !GetAtt VPCStack.Outputs.PublicSubnet6
        ECSAMI: !Ref AnalysisModelECSAMI
        InstanceType: !Ref AnalysisModelInstanceType
        EC2KeyPairName: !Ref EC2KeyPairName
        MinSize: !Ref AnalysisModelMinSize
        MaxSize: !Ref AnalysisModelMaxSize
        DesiredCapacity: !Ref AnalysisModelDesiredCapacity
        TargetBacklogPerTask: !Ref AnalysisModelTargetBacklogPerTask
        AnalysisModelECRRepositoryName: !Ref AnalysisModelECRRepositoryName
        AnalysisModelImageTag: !Ref AnalysisModelImageTag
        CustomAnalysisQueueUrl: !GetAtt CustomAnalysisSQSQueue.Outputs.CustomAnalysisQueueUrl
        CustomAnalysisQueueName: !GetAtt CustomAnalysisSQSQueue.Outputs.CustomAnalysisQueueName
        CustomAnalysisQueueArn: !GetAtt CustomAnalysisSQSQueue.Outputs.CustomAnalysisQueueArn
        VideoStorageS3BucketName: !Ref VideoStorageS3BucketName
        StackName: !Ref AWS::StackName
