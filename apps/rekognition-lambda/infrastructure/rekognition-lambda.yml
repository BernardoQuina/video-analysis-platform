AWSTemplateFormatVersion: '2010-09-09'
Description: Lambda for Rekognition with SQS Event Triggers

Parameters:
  LambdasCodeS3BucketName:
    Type: String
    Description: Name of the pre created bucket that stores lambda code zip file
  EnvironmentName:
    Type: String
    Description: Name of the the environment of the lambda (e.g. development, production)
  DynamoDBTableName:
    Type: String
    Description: Name for the DynamoDB Table
  DynamoDBTableArn:
    Type: String
    Description: Arn of the DynamoDB Table
  StackName:
    Type: String
    Description: Name of the parent stack

Resources:
  # Lambda Execution Role for Rekognition Lambda
  RekognitionLambdaRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Effect: Allow
            Principal:
              Service: lambda.amazonaws.com
            Action: sts:AssumeRole
      Policies:
        - PolicyName: RekognitionLambdaPolicy
          PolicyDocument:
            Statement:
              - Effect: Allow
                Action:
                  - s3:GetObject
                  - rekognition:StartLabelDetection
                  - rekognition:GetLabelDetection
                  - logs:CreateLogStream
                  - logs:PutLogEvents
                Resource: '*'
        - PolicyName: DynamoDBCRUDPolicy
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Effect: Allow
                Action:
                  - dynamodb:PutItem
                  - dynamodb:GetItem
                  - dynamodb:UpdateItem
                  - dynamodb:DeleteItem
                  - dynamodb:Query
                  - dynamodb:BatchGetItem
                  - dynamodb:BatchWriteItem
                  - dynamodb:Scan
                  - dynamodb:DescribeTable
                Resource:
                  - !Ref DynamoDBTableArn # Main table ARN
                  - !Sub ${DynamoDBTableArn}/* # Includes all GSIs of the table

  # Rekognition Lambda Function
  RekognitionLambda:
    Type: AWS::Lambda::Function
    Properties:
      FunctionName: RekognitionVideoLambda
      Handler: index.handler
      Timeout: 900
      Role: !GetAtt RekognitionLambdaRole.Arn
      Code:
        S3Bucket: !Ref LambdasCodeS3BucketName
        S3Key: !Sub ${EnvironmentName}/rekognition-lambda.zip
      Runtime: nodejs20.x
      Environment:
        Variables:
          DYNAMODB_TABLE_NAME: !Ref DynamoDBTableName
      LoggingConfig:
        LogGroup: !Ref RekognitionLambdaCloudWatchLogsGroup
    DeletionPolicy: Delete

  RekognitionLambdaCloudWatchLogsGroup:
    Type: AWS::Logs::LogGroup
    Properties:
      LogGroupName: /lambda/rekognition
      RetentionInDays: 14
    DeletionPolicy: Delete
    UpdateReplacePolicy: Retain

Outputs:
  RekognitionLambdaArn:
    Description: ARN of the Rekognition Lambda function
    Value: !GetAtt RekognitionLambda.Arn
    Export:
      Name: !Sub ${StackName}-RekognitionLambdaArn
