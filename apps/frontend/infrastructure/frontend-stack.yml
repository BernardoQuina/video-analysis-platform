AWSTemplateFormatVersion: '2010-09-09'
Description: Frontend deployment stack for S3 and CloudFront

Parameters:
  BucketName:
    Type: String
    Description: Name of the S3 bucket to create
  DomainName:
    Type: String
    Description: Domain name for the CloudFront distribution
  HostedZoneId:
    Type: AWS::Route53::HostedZone::Id
    Description: The ID of the hosted zone in Route 53
  CertificateArn:
    Type: String
    Description: ARN of the manually created ACM certificate (must be in us-east-1 for CloudFront)

Resources:
  # S3 bucket (static website hosting)
  FrontendBucket:
    Type: AWS::S3::Bucket
    Properties:
      BucketName: !Ref BucketName
      # This block ensures the bucket is not publicly accessible
      PublicAccessBlockConfiguration:
        BlockPublicAcls: true
        BlockPublicPolicy: true
        IgnorePublicAcls: true
        RestrictPublicBuckets: true
      # Enables server-side encryption for the bucket
      BucketEncryption:
        ServerSideEncryptionConfiguration:
          - ServerSideEncryptionByDefault:
              SSEAlgorithm: AES256
      # Static website config
      WebsiteConfiguration:
        IndexDocument: index.html
        ErrorDocument: index.html

  # CloudFront Origin Access Identity (OAI)
  # This is used to allow CloudFront to access the private S3 bucket
  # CloudFrontOriginAccessIdentity:
  #   Type: AWS::CloudFront::CloudFrontOriginAccessIdentity
  #   Properties:
  #     CloudFrontOriginAccessIdentityConfig:
  #       Comment: !Sub 'OAI for ${BucketName}'

  # Bucket policy that allows the CloudFront OAI to read from the bucket
  BucketPolicy:
    Type: AWS::S3::BucketPolicy
    Properties:
      Bucket: !Ref FrontendBucket
      PolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal: '*'
            Action: 's3:GetObject'
            Resource: !Sub ${FrontendBucket.Arn}/*
            Condition:
              StringEquals:
                aws:Referer: temporary-random-secret-value
    # Type: AWS::S3::BucketPolicy
    # Properties:
    #   Bucket: !Ref FrontendBucket
    #   PolicyDocument:
    #     Version: '2012-10-17'
    #     Statement:
    #       - Effect: Allow
    #         Principal:
    #           AWS: !Sub 'arn:aws:iam::cloudfront:user/CloudFront Origin Access Identity ${CloudFrontOriginAccessIdentity}'
    #         Action: 's3:GetObject'
    #         Resource: !Sub '${FrontendBucket.Arn}/*'

  # CloudFront distribution
  CloudFrontDistribution:
    Type: AWS::CloudFront::Distribution
    Properties:
      DistributionConfig:
        Aliases:
          - !Ref DomainName
        DefaultRootObject: index.html
        Enabled: true
        HttpVersion: http2 # Uses HTTP/2 for better performance
        DefaultCacheBehavior:
          AllowedMethods: # Specifies which HTTP methods CloudFront processes and forwards
            - GET
            - HEAD
            - OPTIONS
          Compress: true # Enables CloudFront compression
          DefaultTTL: 86400 # Default time-to-live for files in seconds (24 hours)
          ForwardedValues:
            QueryString: false # Doesn't forward query strings to origin
          MaxTTL: 31536000 # Maximum time-to-live for files in seconds (1 year)
          MinTTL: 0 # Minimum time-to-live for files in seconds
          TargetOriginId: S3Origin
          ViewerProtocolPolicy: redirect-to-https # Redirects HTTP to HTTPS
        Origins:
          - DomainName: !GetAtt FrontendBucket.RegionalDomainName
            Id: S3Origin
            OriginCustomHeaders:
              - HeaderName: Referer
                HeaderValue: temporary-random-secret-value
            # S3OriginConfig:
            #   OriginAccessIdentity: !Sub 'origin-access-identity/cloudfront/${CloudFrontOriginAccessIdentity}'
        PriceClass: PriceClass_100 # Uses only US, Canada, Europe, & Israel edges (cheapest option)
        ViewerCertificate:
          AcmCertificateArn: !Ref CertificateArn
          SslSupportMethod: sni-only
          MinimumProtocolVersion: TLSv1.2_2021
        # Custom Error Response configuration
        CustomErrorResponses:
          - ErrorCode: 404
            ResponsePagePath: /index.html # Serve index for 404 errors (client routing will take over)
            ResponseCode: 200
            ErrorCachingMinTTL: 300 # Cache error responses for 5 minutes

  DNSRecord:
    Type: AWS::Route53::RecordSet
    Properties:
      HostedZoneId: !Ref HostedZoneId
      Name: !Ref DomainName
      Type: A
      AliasTarget:
        DNSName: !GetAtt CloudFrontDistribution.DomainName
        HostedZoneId: Z2FDTNDATAQYW2 # This is a fixed value for CloudFront distributions

Outputs:
  BucketName:
    Description: Name of S3 bucket to hold website content
    Value: !Ref FrontendBucket
  CloudFrontDistributionId:
    Description: ID of CloudFront distribution
    Value: !Ref CloudFrontDistribution
  CloudFrontDomainName:
    Description: Domain name of CloudFront distribution
    Value: !GetAtt CloudFrontDistribution.DomainName
  WebsiteURL:
    Description: URL of the website
    Value: !Sub https://${DomainName}
    Export:
      Name: !Sub ${AWS::StackName}-WebsiteURL
